# Use docker-based build environment (instead of openvz)
sudo: false

language: java
jdk: openjdk6

env:
  global:
    - secure: "FUV1hPOEUWCQ5vLNQOxZwB6EaNGmWymEA3EHJ/FjPJjz0GTt8NqvrwNakfCYlFAF9+ifZ60J1CC+R0u74GnAj1Ae0kVOtyduYTPTBazQX7Jcr6lsxp5EOzkuVaRVySLs5fgOrVxYv7Isv2PimEkMF3dZEh7vHdhvBvSR9H9ZKDw="
    - COVERITY_SCAN_PROJECT_NAME: dresden-ocl/dresdenocl

cache:
  directories:
    - '$HOME/.m2/repository'

addons:
  coverity_scan:
    project:
      name: dresden-ocl/dresdenocl
      version: 3.4.0
    notification_email: dev@larsschuetze.de
    build_command_prepend: cov-configure --java
    build_command: mvn install -Dmaven.test.skip=true -DskipTests -B
    branch_pattern: coverity_scan

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/2003f73d9ccfbf9e3e53
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always

before_script:
  - echo -e "Host lars.inf.tu-dresden.de\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - ssh-keyscan -H -t rsa,dsa lars.inf.tu-dresden.de >> ~/.ssh/known_hosts
  - export JAVA_OPTS=--server -Xms1500m -Xmx1500m

install: /bin/true

script:
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then mvn clean install -B ; fi
  #- mvn clean cobertura:cobertura coveralls:report

after_success:
  - if [ "$TRAVIS_BRANCH" == "develop" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] ; then
    mvn install -Dmaven.test.skip=true -DskipTests -B -P upload-latest ; fi
  - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] ; then
    mvn install -Dmaven.test.skip=true -DskipTests -B -P upload-release ; fi
  # dont waste space in keeping every single version
  - mv ~/.m2/repository/org/dresden-ocl /tmp/dresden-ocl
