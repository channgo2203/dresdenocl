<%@ jet package="org.dresdenocl.codegen.adapter.templates.model" class="TypeAdapter" imports="org.eclipse.emf.codegen.ecore.genmodel.* org.dresdenocl.codegen.adapter.PivotAdapterGeneratorUtil "%>
<%GenClass genClass = (GenClass)argument;
GenPackage genPackage = genClass.getGenPackage();
GenModel genModel = genPackage.getGenModel();
String modelName = PivotAdapterGeneratorUtil.startWithCapitalLetter(genModel.getModelName());
String modelNameLC = PivotAdapterGeneratorUtil.startWithLowerCaseLetter(genModel.getModelName());
String pluginName = PivotAdapterGeneratorUtil.startWithCapitalLetter(genModel.getModelName()) + "MetamodelPlugin";
String adapterClass = PivotAdapterGeneratorUtil.getAdapterClassName(genModel, genClass);
String adapteeClass = PivotAdapterGeneratorUtil.getDSLModelUniqueTypeName(genModel, genClass);
String adapteeName = PivotAdapterGeneratorUtil.getDSLElementName(adapteeClass);
String implementThis = PivotAdapterGeneratorUtil.getImplementThis();%>
package <%=PivotAdapterGeneratorUtil.getAdapterPackage(genModel)%>;

<%genModel.addImport("org.apache.log4j.Logger");%>
<%genModel.addImport("java.util.ArrayList");%>
<%genModel.addImport("java.util.List");%>
<%genModel.addImport("org.dresdenocl.pivotmodel.Namespace");%>
<%genModel.addImport("org.dresdenocl.pivotmodel.Operation");%>
<%genModel.addImport("org.dresdenocl.pivotmodel.Property");%>
<%genModel.addImport("org.dresdenocl.pivotmodel.Type");%>
<%genModel.addImport("org.dresdenocl.pivotmodel.base.AbstractType");%>
<%genModel.addImport(PivotAdapterGeneratorUtil.getAdapteeClassImport(genModel, genClass));%>
<%genModel.markImportLocation(stringBuffer);%>

/**
 * An implementation of the Pivot Model {@link Type} concept for <%=modelName%>.
 *
 * @generated
 */
public class <%=adapterClass%> extends AbstractType implements Type {
	
	/**
	 * Logger for this class
	 *
	 * @generated
	 */
	private static final Logger logger = org.dresdenocl.metamodels.<%=modelNameLC%>.<%=pluginName%>.getLogger(<%=adapterClass%>.class);
	
	/**
	 * the adapted <%=adapteeClass%> class
	 *
	 * @generated
	 */
	private <%=adapteeClass%> <%=adapteeName%>;
	
	/**
	 * Creates a new <code><%=adapterClass%></code> instance.
 	 *
	 * @param <%=adapteeName%> the {@link <%=adapteeClass%>} that is adopted by this class
	 *
	 * @generated
	 */
	public <%=adapterClass%>(<%=adapteeClass%> <%=adapteeName%>) {
		
		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapterClass%>(<%=adapteeName%>=" + <%=adapteeName%> + ") - enter"); //$NON-NLS-1$ //$NON-NLS-2$
		}
	
		// initialize
		this.<%=adapteeName%> = <%=adapteeName%>;
	
		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapterClass%>() - exit"); //$NON-NLS-1$
		}
	}
	
	/**
	 * @see org.dresdenocl.pivotmodel.base.AbstractType#getName()
	 *
	 * @generated
	 */
	@Override
	public String getName() {
		<%=implementThis%>
		return null;
	}
	
	/**
	 * @see org.dresdenocl.pivotmodel.base.AbstractType#getNamespace()
	 *
	 * @generated
	 */
	@Override
	public Namespace getNamespace() {
		<%=implementThis%>
		return null;
	}
	
	/**
	 * @see org.dresdenocl.pivotmodel.base.AbstractType#getOwnedPropertyImpl()
	 *
	 * @generated
	 */
	@Override
	protected List<Property> getOwnedPropertyImpl() {
		List<Property> ownedProperty = new ArrayList<Property>();
		
		<%=implementThis%>
		
		return ownedProperty;
	}
	
	/**
	 * @see org.dresdenocl.pivotmodel.base.AbstractType#getOwnedOperationImpl()
	 *
	 * @generated
	 */
	@Override
	protected List<Operation> getOwnedOperationImpl() {
		List<Operation> ownedOperation = new ArrayList<Operation>();
		
		<%=implementThis%>
		
		return ownedOperation;
	}
	
	/**
	 * @see org.dresdenocl.pivotmodel.base.AbstractType#getSuperTypeImpl()
	 *
	 * @generated
	 */
	@Override
	protected List<Type> getSuperTypeImpl() {
		List<Type> superType = new ArrayList<Type>();
		
		<%=implementThis%>
		
		return superType;
	}

}
<%genModel.emitSortedImports();%>